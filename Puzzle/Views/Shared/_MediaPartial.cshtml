@model List<Media>

@{
    int classIndex = 0;
}

@if (Model.Any() == false)
{
    <div style="padding: 30px 0px; color: rgb(161, 166, 187); text-align: center;">تصویری وجود ندارد!</div>
}
else
{
    @if (Model.Where(x => x.Type == Enums.Enum.MediaType.Screen).Any())
    {
        <div style="margin-top: -10px;" class="legend"><span>اسکرین</span></div>
    }
    <div id="lightGallery">
        @{ int index = 0;}
        @foreach (var group in Model.Where(x => x.Type == Enums.Enum.MediaType.Screen).GroupBy(x => x.Description))
        {
            @if (index++ > 0)
            {
                <div class="row"></div><hr />
            }
            else
            {
                if (string.IsNullOrWhiteSpace(group.Key))
                {
                    <div class="row" style="margin-top: 0px;"></div>
                }
                else
                {
                    <div class="row" style="margin-top: 46px;"></div>
                }
            }
            <div style="padding: 0px 10px 10px 10px;">
                @if (group.Key != "Conversation")
                {
                    @group.Key
                }
            </div>

            foreach (var item in group)
            {
                <div href="@item.Url" class="lightgallery-selector screenRow-@index" style="width: calc(1072px / 6); padding: 10px; height: calc((1072px / 6) * 2 / 3); float: right; margin-bottom: 20px; ">
                    <img src="@item.Url.Bitmap(48)" id="copy-@(++classIndex)" style="width: 100%; height: 100%; object-fit: cover; border-radius: 5px;" />
                    <img src="~/images/Loading.gif" style="width: 100%; height: 100%; object-fit: cover; border-radius: 5px; opacity: 0.75; position: relative; top: -100%; display: none;" />

                    <span onclick="copyImage(event, '@("copy-"+classIndex)')" style="position: relative; top: -45px; right: -81px; direction: ltr; float: left; background: rgb(0 0 0 / 50%); border-radius: 50px; padding: 10px 10px 4px 10px; cursor: pointer; display: none;">
                        <svg style="color: #fff;" xmlns="http://www.w3.org/2000/svg" width="14px" height="14px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" id="invoice-row-9457-copy-icon" class="feather feather-copy"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>
                    </span>

                    <span style="opacity: 0; position: relative; top: -45px; left: 10px; direction: ltr; float: left; background: rgb(0 0 0 / 50%); border-radius: 50px; padding: 10px 10px 4px 10px; cursor: pointer; display: none;">
                        <svg style="color: #fff;" data-v-fe28be9a="" xmlns="http://www.w3.org/2000/svg" width="14px" height="14px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash"><polyline data-v-fe28be9a="" points="3 6 5 6 21 6"></polyline><path data-v-fe28be9a="" d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg>
                    </span>


                    <div style="width: 100%; display: flex; justify-content: space-between;">
                        <span style="margin-top: -30px; justify-content: center; background: #f0f2f7; color: #3a405b; font-size: 12px; height: 20px; width: 20px; text-align: center; padding: 2px; border-radius: 50px; ">
                            @(Model.IndexOf(item) + 1)
                        </span>
                        <span style="direction: ltr; color: #b9b9c3 !important; font-size: 13px; margin-top: -28px;">
                            @item.CreatedAt.ToShamsi().ToString("yyyy/MM/dd HH:mm")
                        </span>
                    </div>
                </div>
            }

            <span class="load-row-btn" style=" background: #51dde9; border-radius: 5px; padding: 5px 7px 2px 7px; cursor: pointer; margin-top: 50px; display: inline-block;" onclick="LoadRow('@("screenRow-" + index)')">
                <svg xmlns="http://www.w3.org/2000/svg" style="color: #fff;" class="icon icon-tabler icon-tabler-cloud-download" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M19 18a3.5 3.5 0 0 0 0 -7h-1a5 4.5 0 0 0 -11 -2a4.6 4.4 0 0 0 -2.1 8.4"></path>
                    <line x1="12" y1="13" x2="12" y2="22"></line>
                    <polyline points="9 19 12 22 15 19"></polyline>
                </svg>
            </span>
        }
    </div>

    @if (Model.Where(x => x.Type == Enums.Enum.MediaType.Render).Any())
    {
        <div style="margin-top: -10px;" class="legend"><span>رندر</span></div>
    }
    <div id="lightGallery2">
        @{ index = 0;}
        @foreach (var group in Model.Where(x => x.Type == Enums.Enum.MediaType.Render).GroupBy(x => x.Description))
        {
            @if (index++ > 0)
            {
                <div class="row"></div><hr />
            }
            else
            {
                if (string.IsNullOrWhiteSpace(group.Key))
                {
                    <div class="row" style="margin-top: 0px;"></div>
                }
                else
                {
                    <div class="row" style="margin-top: 46px;"></div>
                }
            }
            <div style="padding: 0px 10px 10px 10px;">
                @if (group.Key != "Conversation")
                {
                    @group.Key
                }
            </div>

            foreach (var item in group)
            {
                <div href="@item.Url" class="lightgallery-selector2 renderRow-@index" style="width: calc(1072px / 6); padding: 10px; height: calc((1072px / 6) * 2 / 3); float: right; margin-bottom: 20px; ">
                    <img src="@item.Url.Bitmap(48)" id="copy-@(++classIndex)" style="width: 100%; height: 100%; object-fit: cover; border-radius: 5px;" />
                    <img src="~/images/Loading.gif" style="width: 100%; height: 100%; object-fit: cover; border-radius: 5px; opacity: 0.75; position: relative; top: -100%; display: none;" />

                    <span onclick="copyImage(event, '@("copy-"+classIndex)')" style="position: relative; top: -45px; right: -81px; direction: ltr; float: left; background: rgb(0 0 0 / 50%); border-radius: 50px; padding: 10px 10px 4px 10px; cursor: pointer; display: none;">
                        <svg style="color: #fff;" xmlns="http://www.w3.org/2000/svg" width="14px" height="14px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" id="invoice-row-9457-copy-icon" class="feather feather-copy"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>
                    </span>

                    @if (User.IsInRole("Manager"))
                    {
                        <span style="position: relative; top: -45px; left: 10px; direction: ltr; float: left; background: rgb(0 0 0 / 50%); border-radius: 50px; padding: 10px 10px 4px 10px; cursor: pointer; display: none;" onclick="mediaFavorite(event, '@item.Id')">
                            <svg style="stroke: #fff;" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-heart media-favorite-@item.Id @(item.Status == Enums.Enum.MediaStatus.Read ? "media-favorite-active" : null)" width="14" height="14" viewBox="0 0 24 24" stroke-width="2" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572"></path>
                            </svg>
                        </span>
                    }
                    else
                    {
                        <span style="opacity: 0; position: relative; top: -45px; left: 10px; direction: ltr; float: left; background: rgb(0 0 0 / 50%); border-radius: 50px; padding: 10px 10px 4px 10px; cursor: pointer; display: none;">
                            <svg style="color: #fff;" data-v-fe28be9a="" xmlns="http://www.w3.org/2000/svg" width="14px" height="14px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash"><polyline data-v-fe28be9a="" points="3 6 5 6 21 6"></polyline><path data-v-fe28be9a="" d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg>
                        </span>
                    }   

                    <div style="width: 100%; display: flex; justify-content: space-between;">
                        <span style="margin-top: -30px; justify-content: center; background: #f0f2f7; color: #3a405b; font-size: 12px; height: 20px; width: 20px; text-align: center; padding: 2px; border-radius: 50px; ">
                            @(Model.IndexOf(item) + 1)
                        </span>
                        <span style="direction: ltr; color: #b9b9c3 !important; font-size: 13px; margin-top: -28px;">
                            @item.CreatedAt.ToShamsi().ToString("yyyy/MM/dd HH:mm")
                        </span>
                    </div>
                </div>
            }

            <span class="load-row-btn" style="background: #51dde9; border-radius: 5px; padding: 5px 7px 2px 7px; cursor: pointer; margin-top: 50px; display: inline-block;" onclick="LoadRow('@("renderRow-" + index)')">
                <svg xmlns="http://www.w3.org/2000/svg" style="color: #fff;" class="icon icon-tabler icon-tabler-cloud-download" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M19 18a3.5 3.5 0 0 0 0 -7h-1a5 4.5 0 0 0 -11 -2a4.6 4.4 0 0 0 -2.1 8.4"></path>
                    <line x1="12" y1="13" x2="12" y2="22"></line>
                    <polyline points="9 19 12 22 15 19"></polyline>
                </svg>
            </span>
        }
    </div>
}
