@model List<Project>

@{
    int count = Model
        .Where(c => c.ProjectCategory != Enums.Enum.ProjectCategory.Edit)
        .Where(c => c.ProjectCategory != Enums.Enum.ProjectCategory.Amendment)
        .Where(c => c.ProjectCategory != Enums.Enum.ProjectCategory.Print)
        .Count();
}

<table>
    <thead>
        <tr>
            <th>#</th>
            @if (ViewBag.ShowName == true)
            {
                <th style="min-width: 116px;">نام و نام خانوادگی</th>
            }
            @if (ViewBag.ShowTitle != false)
            {
                <th>عنوان</th>
            }
            @if (ViewBag.ShowReceipt == true)
            {
                <th>رسید</th>
            }
            @if (ViewBag.ShowDelivery != false)
            {
                <th style="width: 104px; min-width: 75px;">ارسال</th>
            }
            <th>دسته بندی</th>
            @if (ViewBag.ShowOrderType != false)
            {
                <th style="width: 59px;">سفارش</th>
            }
            @if (ViewBag.ShowDesigner == true)
            {
                <th style="padding-right: 10px; padding-left: 10px;">
                    <select class="search-designer">
                        <option value="">طراح</option>
                        @foreach (var item in (ViewBag.Designer as List<UserViewModel>).OrderBy(c => c.Priority))
                        {
                            <option value="@string.Join(" ", item.Name.Split(" ").Skip(1))">
                                @string.Join(" ", item.Name.Split(" ").Skip(1))
                            </option>
                        }
                    </select>
                </th>
            }
            <th style="width: 52px;">پرینت</th>
            <th style="width: 75px; min-width: 75px;">توضیحات</th>
            <th>تحویل</th>
            <th style="width: 75px; min-width: 75px;">وضعیت</th>
            <th style="width: 75px; min-width: 75px;">پیام</th>
            @if (ViewBag.ShowFavoriteUser == true)
            {
                <th>علاقه مند</th>
            }
            <th>کل</th>
            <th>دریافتی</th>
            <th style="width: 70px; min-width: 70px;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(c => ViewBag.FormTitle != "بدون طراح‌ها" || c.ProjectCategory != Enums.Enum.ProjectCategory.Print))
        {
            <tr class="li-project" style="@(item.Cancel ? "background: rgb(235 78 54 / 10%);" : null) @(item.ProjectCategory == Enums.Enum.ProjectCategory.Cancel ? "opacity: 0.5;" : null)">
                <td>
                    @if (item.ProjectCategory != Enums.Enum.ProjectCategory.Amendment && item.ProjectCategory != Enums.Enum.ProjectCategory.Edit && item.ProjectCategory != Enums.Enum.ProjectCategory.Print)
                    {
                        @(count--)
                    }
                </td>
                @if (ViewBag.ShowName == true)
                {
                    <td>
                        <div>
                            @if (ViewBag.ForDesigner != true)
                            {
                                <a class="customer-tag" style="@(item.Customer.Balance < 0 ? "color: #eb4e36;" : (item.Customer.Balance > 0 || item.Customer.Credit > 0) ? "color: #43d29e;" : null)" href="/customer/details/@item.CustomerId">
                                    @item.Customer.LastName @item.Customer.FirstName
                                </a>
                                @if (string.IsNullOrWhiteSpace(item.Customer.Description) == false)
                                {
                                    <span class="customer-description">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">
                                            <circle cx="12" cy="12" r="10"></circle>
                                            <line x1="12" y1="16" x2="12" y2="12"></line>
                                            <line x1="12" y1="8" x2="12.01" y2="8"></line>
                                        </svg>
                                    </span>
                                }
                            }
                            else
                            {
                                <a class="customer-tag" style="@(item.Customer.Balance < 0 ? "color: #eb4e36;" : (item.Customer.Balance > 0 || item.Customer.Credit > 0) ? "color: #43d29e;" : null)" href="/architect/customer/@item.CustomerId">
                                    @item.Customer.LastName @item.Customer.FirstName
                                </a>
                            }

                            @if (item.Customer.LastActivity != null)
                            {
                                <span class="customer-install-app">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-device-mobile-check" width="18" height="18" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M11.5 21h-3.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v9.5"></path>
                                        <path d="M11 4h2"></path>
                                        <path d="M12 17v.01"></path>
                                        <path d="M15 19l2 2l4 -4"></path>
                                    </svg>
                                </span>
                            }
                        </div>
                        @if (ViewBag.ShowMobile != false)
                        {
                            <small class="text-muted"> @item.Customer.Mobile</small>
                        }
                    </td>
                }

                @if (ViewBag.ShowTitle != false)
                {
                    <td class="project-partial-title">
                        <div>
                            @item.Title?.Replace("+", " + ").Replace("-", " - ").Replace("/", " / ").Replace("  ", " ").Trim()
                        </div>
                        @if (item.Parent != null)
                        {
                            <small class="text-muted">
                                @item.Parent.Title
                            </small>
                        }
                    </td>
                }

                @if (ViewBag.ShowReceipt == true)
                {
                    <td>
                        @item.Receipt.ToShamsi().ToShortDateString()
                    </td>
                }
                @if (ViewBag.ShowDelivery != false)
                {
                    <td>
                        <span class="change-delivery no-delivery @(item.PrintDelivery ? "change-delivery-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Print" style="margin-right:0px; margin-bottom: 3px;">P</span>
                        <span class="change-delivery no-delivery @(item.Telegram ? "change-delivery-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Telegram">T</span>
                        <span class="change-delivery no-delivery @(item.Whatsapp ? "change-delivery-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Whatsapp">W</span>
                        <span class="change-delivery no-delivery @(item.Flash ? "change-delivery-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Flash">F</span>
                        <span class="change-delivery no-delivery @(item.Eitaa ? "change-delivery-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Eitaa">E</span>
                        <span class="change-delivery no-delivery @(item.App ? "change-delivery-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.App">A</span>
                    </td>
                }
                <td>
                    @item.ProjectCategory.GetDescription()
                </td>
                @if (ViewBag.ShowOrderType != false)
                {
                    <td>
                        @{
                            var orderType = "ح";

                            if (item.OrderType == Enums.Enum.OrderType.Online)
                            {
                                orderType = "آ";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.Other)
                            {
                                orderType = "غ";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.Telegram)
                            {
                                orderType = "ت";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.Whatsapp)
                            {
                                orderType = "و";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.Soroush)
                            {
                                orderType = "س";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.Eitaa)
                            {
                                orderType = "ا";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.Rubika)
                            {
                                orderType = "ر";
                            }
                            else if (item.OrderType == Enums.Enum.OrderType.App)
                            {
                                orderType = "اپ";
                            }
                        }

                        <span class="btn-order-type">@orderType</span>
                    </td>
                }
                @if (ViewBag.ShowDesigner == true)
                {
                    <td>
                        @if (item.Designer != null)
                        {
                            <span data-designer-name="@string.Join(" ", item.Designer.Name.Split(" ").Skip(1))" class="designer-name">@string.Join(" ", item.Designer.Name.Split(" ").Skip(1))</span>
                        }
                        else
                        {
                            <span data-designer-name="" class="designer-name designer-empty"></span>
                        }
                    </td>
                }
                <td>
                    <span class="@(item.Print ? "btn-print-active" : "btn-print")">P</span>
                </td>
                <td>
                    <span data-description-id="@item.Id" data-description="@item.Description" class="open-description @(!string.IsNullOrWhiteSpace(item.Description) ? "btn-print-active" : "btn-print")">D</span>

                    @{
                        var unReadReport = item.ProjectReport.Where(x => x.ReadByAdmin == false).Any();
                    }
                    <span data-id="@item.Id" data-title="@(item.Parent != null ? item.Parent.Title : item.Title)" class="project-report-icon @(unReadReport ? "project-report-icon-active" : null)">گ</span>
                </td>
                <td>
                    @item.Delivery?.ToShamsi().ToShortDateString()
                </td>
                <td>
                    <span class="change-status @(item.Notification ? "change-status-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Notification" style="margin-right: 0px; margin-bottom: 3px;">N</span>
                    <span class="change-status @(item.Ready ? "change-status-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Ready">R</span>
                    <span class="change-status @(item.Screenshot ? "change-status-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Screenshot" style="margin-right: 0px; margin-bottom: 3px;">S</span>
                    <span class="change-status @(item.Follow ? "change-status-active" : null)" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.Follow">F</span>
                </td>
                <td>
                    @if (ViewBag.ForDesigner != true)
                    {
                        var unreadCount = item.Conversation.Where(x => x.IsDelete == false).Where(x => x.UnreadByAdmin).Count();
                        var media = item.Conversation.Where(x => x.IsDelete == false)
                        .Where(x => x.UnreadByAdmin).Where(x => x.Type == Enums.Enum.MediaType.Render || x.Type == Enums.Enum.MediaType.Screen)
                        .Count();

                        if (media > 0)
                        {
                            <span class="media-badge-count">@media</span>
                        }

                        string url = "/edit/" + item.Id + "?tab=conversation";

                        if (item.ProjectId != null)
                        {
                            url = "/edit/" + item.ProjectId + "?id=" + item.Id + "&tab=conversation";
                        }

                        <a href="@url" class="read-status @(unreadCount > 0 ? "read-status-active" : null)" style="margin-bottom: 3px; cursor: pointer;">
                            @unreadCount


                        </a>
                        <svg class="feather feather-check status-media change-status @(item.MediaDone ? "change-status-active" : null)" style="margin-bottom: -8px; padding: 5px;" data-id="@item.Id" data-type="@Enums.Enum.DeliveryType.MediaDone" xmlns="http://www.w3.org/2000/svg" width="15px" height="15px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="20 6 9 17 4 12"></polyline>
                        </svg>

                        <span class="read-status @(item.Conversation.Where(x => x.IsDelete == false).Where(x=>x.UnreadByDesigner).Any() ? "read-status-active" : null)">D</span>
                        <span class="read-status @(item.Conversation.Where(x => x.IsDelete == false).Where(x=>x.UnreadByCustomer).Any() ? "read-status-active" : null)">C</span>
                    }
                    else
                    {
                        var unreadCount = item.Conversation.Where(x => x.IsDelete == false).Where(x => x.UnreadByDesigner).Count();
                        <span class="read-status @(unreadCount > 0 ? "read-status-active" : null)" style="margin-bottom: 3px;">@unreadCount</span>
                        <svg class="done-by-designer feather feather-check status-media change-status @(item.DoneByDesigner ? "change-status-active" : null)" data-id="@item.Id" xmlns="http://www.w3.org/2000/svg" style="margin-bottom: -8px; padding: 5px;" width="15px" height="15px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="20 6 9 17 4 12"></polyline>
                        </svg>
                        <span class="read-status @(item.Conversation.Where(x => x.IsDelete == false).Where(x=>x.UnreadByAdmin).Any() ? "read-status-active" : null)">A</span>
                        <span class="read-status @(item.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x=>x.UnreadByCustomer).Any() ? "read-status-active" : null)">C</span>
                    }
                </td>
                @if (ViewBag.ShowFavoriteUser == true)
                {
                    <td>
                        @foreach (var favorite in item.Favorite)
                        {
                            <label class="favorite-user-label">@favorite.User.Name</label>
                        }

                        @if (item.Conversation.Any(x => x.ConversationFavorite.Any()))
                        {
                            <label style="background: #51dde9;" class="favorite-user-label">گالری اپ</label>
                        }
                    </td>
                }
                <td style="@(item.TotalPrice != item.TotalPayment ? "color: #eb4e36;" : null)">
                    @item.TotalPrice.ToString("N0")
                </td>
                <td>
                    @item.TotalPayment.ToString("N0")
                </td>
                <td>
                    @if (ViewBag.ForDesigner != true)
                    {
                        string url = "/edit/" + item.Id;

                        if (item.ProjectId != null)
                        {
                            url = "/edit/" + item.ProjectId + "?id=" + item.Id;
                        }

                        <a href="@url" style="color: #4be1ab; text-decoration: none;">
                            @*<i class='fa fa-edit'></i>*@
                            <svg style="vertical-align: middle;" xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" id="invoice-row-51054151-send-icon" class="feather feather-edit">
                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                            </svg>
                        </a>

                        <label onclick="showAddRepair('@item.Id')" style="color: #3b55e6; margin-bottom: 0px; @(item.ProjectId != null ? "visibility: hidden;" : null)">
                            <svg style="vertical-align: middle; margin-right: 9px; cursor: pointer;" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-circle-plus" width="20px" height="20px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <circle cx="12" cy="12" r="9" />
                                <line x1="9" y1="12" x2="15" y2="12" />
                                <line x1="12" y1="9" x2="12" y2="15" />
                            </svg>
                        </label>

                        <label class="favorite @(item.Favorite.Where(x => x.UserId == User.GetUserId()).Any() ? "favorite-active" : null)" data-id="@item.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-heart" width="20px" height="20px" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
                            </svg>
                        </label>

                        bool showInstagram = item.Conversation.Where(x => x.IsDelete == false).Where(x => x.Type == Enums.Enum.MediaType.Render).Any();

                        if (showInstagram)
                        {
                            <a href="/project/instagram/@item.Id" target="_blank" style="color: #3a405b;">
                                <svg style="stroke-width: 1.5px; margin-right: 5px;" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-instagram" width="20px" height="20px" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M4 4m0 4a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4h-8a4 4 0 0 1-4-4z"></path>
                                    <path d="M12 12m-3 0a3 3 0 1 0 6 0 3 3 0 1 0-6 0"></path>
                                    <path d="M16.5 7.5l0 .01"></path>
                                </svg>
                            </a>
                        }
                    }
                    else
                    {
                        string url = "/architect/media/" + item.Id;

                        if (item.ProjectId != null)
                        {
                            url = "/architect/media/" + item.ProjectId + "?id=" + item.Id;
                        }

                        <a href="@url" style="color: #4be1ab; text-decoration: none;">
                            @*<i class='fa fa-edit'></i>*@
                            <svg style="vertical-align: middle;" xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" id="invoice-row-51054151-send-icon" class="feather feather-edit">
                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                            </svg>
                        </a>

                        <label class="favorite @(item.Favorite.Where(x=>x.UserId == User.GetUserId()).Any() ? "favorite-active" : null)" data-id="@item.Id" style="margin-top: 0px;">
                            <svg style="vertical-align: middle; margin-right: 9px;" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-heart" width="20px" height="20px" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
                            </svg>
                        </label>
                    }
                </td>
            </tr>
        }
    </tbody>

</table>

@if (ViewBag.ForDesigner != true)
{
    <partial name="_RepairAddPartial" />
}