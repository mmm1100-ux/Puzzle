@model Project

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@Model.Title</title>



    <link rel="icon" type="image/png" sizes="32x32" href="/images/icons/32.png?v=1709797002318">
    <link rel="icon" type="image/png" sizes="16x16" href="/images/icons/16.png?v=1709797002318">
    <link rel="manifest" href="/manifest.json" asp-append-version="true">
    <meta name="theme-color" content="#282a37">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="دکوپازل">
    <link rel="apple-touch-icon" href="/images/icons/152.png?v=1709797002318">
    <link rel="mask-icon" href="/images/icons/safari-pinned-tab.svg?v=1709797002318" color="#ff0076">
    <meta name="msapplication-TileImage" content="/images/icons/144.png?v=1709797002318">
    <meta name="msapplication-TileColor" content="#b400ff">



    <link href="~/lib/bootstrap-4.5.3-dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/lightGallery/css/lightgallery-bundle.css" rel="stylesheet" />
    <link href="~/css/my.css" rel="stylesheet" asp-append-version="true" />

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/lightGallery/lightgallery.min.js"></script>
    <script src="~/lib/lightGallery/plugins/thumbnail/lg-thumbnail.min.js"></script>
    <script src="~/lib/lightGallery/plugins/zoom/lg-zoom.min.js"></script>

    <script src="~/lib/heic2any.min.js"></script>

    <script src="~/lib/compressorjs-main/dist/compressor.js"></script>
    <script src="~/lib/bootstrap-4.5.3-dist/js/bootstrap.bundle.min.js"></script>
    @*<script src="~/lib/bootstrap-4.5.3-dist/js/bootstrap.min.js"></script>*@


    <style>
        .OverHide {
            background: #3a405b;
            width: 100%;
            height: 100%;
            position: fixed;
            top: 0px;
            left: 0px;
            overflow-y: hidden;
            opacity: 0.5;
            z-index: 1000;
            display: none;
        }

        #Loading {
            position: fixed;
            top: 25%;
            z-index: 1200;
            display: none;
            width: 270px;
            margin-left: calc(50% - 135px);
        }

            #Loading img {
                width: 100%;
            }

        .loading-other {
            display: none;
            background: #fff;
            padding: 0px 20px 20px 20px;
        }
    </style>
</head>
<body class="chat-layout">
    <div>
        <div class="header">
            <div class="header-name-pic">
                <div class="header-pic-box">
                    <div class="header-pic-alt">
                        @if (Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                        (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                        (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Render).Any())
                        {
                            <img src="@(Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Render).First().Attachment.Bitmap(480))" />
                        }
                        else if (Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                        (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                        (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Screen).Any())
                        {
                            <img src="@(Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Screen).First().Attachment.Bitmap(480))" />
                        }
                        else
                        {
                            <img src="/images/159.jpg" />
                        }
                    </div>
                    <span class="header-pic-badge"></span>
                </div>

                <div class="header-name">
                    <p>@(Model.Title ?? "بدون نام")</p>
                    <p>@Model.ProjectCategory.GetDescription()</p>
                </div>
            </div>
            <div class="project-details-side-open">
                <div class="">
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-vertical font-medium-2" id="chat-header-actions">
                        <circle cx="12" cy="12" r="1"></circle>
                        <circle cx="12" cy="5" r="1"></circle>
                        <circle cx="12" cy="19" r="1"></circle>
                    </svg>
                </div>
            </div>
        </div>
        @RenderBody()
    </div>
    <div class="OverHide" id="OverHide"></div>
    <div class="Loading" id="Loading">
        <img class="" src="~/images/Loading.gif" />
        <div class="loading-other">
            <div class="">
                <label class="upload-percent">0%</label>
                <label class="upload-size">0MB</label>
            </div>
            <div class="upload-progress">
                <div class="upload-progress-bar" style="width: 0%"></div>
            </div>
        </div>
    </div>

    <div class="loading-fb">
        <div></div>
        <div></div>
        <div></div>
    </div>

    <div class="OverHide2"></div>

    <div class="notif-confirm-modal">
        <div class="notif-confirm-title">
            <label>تنظیمات اعلان</label>
        </div>
        <div class="notif-confirm-description">
            <p>
                برای اطلاع از آخرین پیام ها و بروزرسانی های پروژه، ارسال پیامک برای شما فعال شود؟
            </p>
        </div>
        <div class="notif-confirm-footer">
            <button class="notif-confirm-no">
                <span>خیر</span>
            </button>
            <button class="notif-confirm-yes">
                <span>بله، فعال شود</span>
            </button>
        </div>
    </div>



    <div class="add-repair-modal">
        <div class="add-repair-modal-title">
            <label>افزودن متمم</label>
            <div class="add-repair-modal-close">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-x" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M18 6l-12 12"></path>
                    <path d="M6 6l12 12"></path>
                </svg>
            </div>
        </div>
        <div class="add-repair-modal-description">
            <p>
                لطفا نوع درخواست خود را مشخص نمایید
            </p>
            <div class="add-repair-modal-type">
                <div>اصلاحیه</div>
                <div>تغییرات</div>
            </div>
        </div>
        <div class="add-repair-modal-footer">
            <button class="">
                <span>تایید و ادامه</span>
            </button>
        </div>
    </div>

    <div class="add-project-modal">
        <div class="add-project-modal-title">
            <label>تکمیل اطلاعات</label>
        </div>
        <div class="add-project-modal-description">
            <p>
                پروژه شما با موفقیت ثبت شد.
                <br />
                طرح شما تا زمان ارسال پلن یا توضیحات اولیه در مرحله پیش ثبت نام می‌باشد. لطفا اطلاعات و پلن پروژه را ارسال کنید.
            </p>
        </div>
        <div class="add-project-modal-footer">
            <button class="">
                <span>تایید و ادامه</span>
            </button>
        </div>
    </div>

    <div class="remove-item-modal">
        <div class="remove-item-modal-title">
            <label>حذف پیام</label>
        </div>
        <div class="remove-item-modal-description">
            <p>
                از حذف این مورد مطمئن هستید؟
            </p>
        </div>
        <div class="remove-item-modal-footer">
            <button class="remove-item-cancel">
                <span>انصراف</span>
            </button>
            <button class="remove-item-cofirm">
                <span>حذف</span>
            </button>
        </div>
    </div>


    <div class="project-details-side">
        <div class="project-details-side-header">
            <span class="project-details-side-close">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
            </span>
            <div class="project-details-side-title">
                <div class="">
                    @if (Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                    (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                    (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Render).Any())
                    {
                        <img src="@(Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Render).First().Attachment.Bitmap(480))" />
                    }
                    else if (Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                    (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                    (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Screen).Any())
                    {
                        <img src="@(Model.Conversation.Where(x => x.IsDelete == false && (x.Accepted == true ||
                (x.Type == Enums.Enum.MediaType.Render && (x.Project.App || x.Project.Whatsapp || x.Project.Telegram || x.Project.PrintDelivery || x.Project.Eitaa || x.Project.Soroush || x.Project.Rubika || x.Project.Other || x.Project.Flash)) ||
                (x.Type == Enums.Enum.MediaType.Screen && x.Project.Screenshot))).Where(x => x.Type == Enums.Enum.MediaType.Screen).First().Attachment.Bitmap(480))" />
                    }
                    else
                    {
                        <img src="/images/159.jpg" />
                    }
                </div>
                <h4>@(Model.Title ?? "بدون نام")</h4>
                <span>@Model.ProjectCategory.GetDescription()</span>
            </div>
        </div>
        <div class="project-details-side-description">
            <p>
                اطلاعات پروژه
            </p>
            <div class="project-details-side-property">
                <div>
                    <span>طراح</span>
                    <span>@(Model.Designer != null ? Model.Designer.Name : "-")</span>
                </div>
                <div>
                    <span>تاریخ</span>
                    <span>@Model.Receipt.ToShamsi().ToString("yyyy/MM/dd")</span>
                </div>
                <div>
                    <span>کیفیت</span>
                    <span>@(Model.Type != null ? Model.Type.GetDescription() : "-")</span>
                </div>
                <div>
                    <span>هزینه</span>
                    <span>
                        @{
                            int price = Model.TotalPrice > 0 ? Model.TotalPrice : Model.Approximate;

                            foreach (var child in Model.Child)
                            {
                                price += child.TotalPrice > 0 ? child.TotalPrice : child.Approximate;
                            }
                        }
                        <span class="price">@((price * 1000).ToString("N0"))</span> تومان
                    </span>
                </div>
                <div>
                    <span>پرداخت</span>
                    <span>
                        @{
                            int payment = Model.Payment.Select(x => x.Price).Sum();

                            foreach (var child in Model.Child)
                            {
                                payment += child.Payment.Select(x => x.Price).Sum();
                            }
                        }
                        <span class="payment">@((payment * 1000).ToString("N0"))</span> تومان
                    </span>
                </div>
            </div>
            <div class="project-details-side-btns">
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-photo" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M15 8h.01"></path>
                        <path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z"></path>
                        <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5"></path>
                        <path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l3 3"></path>
                    </svg>
                    <a href="/my/projectdetails/@Model.Id">تصاویر</a>
                </div>
                <div class="my-repair-add-btn-side" data-id="@Model.Id">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-pencil-plus" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4"></path>
                        <path d="M13.5 6.5l4 4"></path>
                        <path d="M16 19h6"></path>
                        <path d="M19 16v6"></path>
                    </svg>
                    <a>افزودن متمم</a>
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        // This will append pwaupdate component, which will register your pwabuilder-sw.js file as the service worker.
        import '/pwaupdate.js';
        const el = document.createElement('pwa-update');
        document.body.appendChild(el);
    </script>

    <script src="/lib/firebase-app.js"></script>
    <script src="/lib/firebase-firestore.js"></script>
    <script src="/lib/firebase-messaging.js"></script>

    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyDJlKZz5DB-Ux2nYg80q8V-wIIlpQ7f_DI",
            authDomain: "puzzle-13d5e.firebaseapp.com",
            projectId: "puzzle-13d5e",
            storageBucket: "puzzle-13d5e.appspot.com",
            messagingSenderId: "58308022725",
            appId: "1:58308022725:web:a40123a148fdde0edbfbac",
            measurementId: "G-6LVSM5GLR4"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        const messaging = firebase.messaging();
    </script>

    @RenderSection("Scripts", false);
    <script src="~/js/app.js" asp-append-version="true"></script>
</body>
</html>
